plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// WEB
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	// ACTUATOR
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	// LOGGING
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'com.slack.api:slack-api-model:1.24.0'
	// LOGGING ASYNC
	implementation 'com.lmax:disruptor:3.4.4'
	// WEB-FLUX (SINK 필요 시 사용, PUSH)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'



	// JPA (필요 시 사용)
	// implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// MYSQL (필요 시 사용)
	// runtimeOnly 'mysql:mysql-connector-java:8.0.31'
	// SECURITY (필요 시 사용)
	// implementation 'org.springframework.boot:spring-boot-starter-security'

	// LOMBOK
	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// DB
	// runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'

	// TEST
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
